var tipuesearch = {"pages": [{'title': 'About', 'text': '我的倉儲 \n \n', 'tags': '', 'url': 'About.html'}, {'title': '每周進度', 'text': '', 'tags': '', 'url': '每周進度.html'}, {'title': 'W1', 'text': '', 'tags': '', 'url': 'W1.html'}, {'title': 'SolidWorks', 'text': '我的分工 \n 22~32 \n 檔案 \n \n \n \n \n \n \n \n \n \n ---------------------------------------------------------------------------------------------------------------- \n', 'tags': '', 'url': 'SolidWorks.html'}, {'title': 'Onshape', 'text': '我的分工 \n 3-6~3-10 \xa0,\xa0 3-11~3-15  ,\xa0 4-1~4-3 \n \n \n \n \n \n --------------------------------------------------------------------------------------------------------------- \n', 'tags': '', 'url': 'Onshape.html'}, {'title': '零件體積', 'text': '\n', 'tags': '', 'url': '零件體積.html'}, {'title': '整組進度', 'text': 'PDF_1: \n \xa0 \xa0 \xa0 \xa0\xa0 \xa0  1~10 \n \xa0 \xa0 \xa0 \xa0 \xa0\xa0 11~21 \n \xa0 \xa0 \xa0 \xa0 \xa0  22~32 \n \xa0 \xa0 \xa0 \xa0 \xa0  43~50 \n PDF_2: \n \xa0 \xa0 \xa0 \xa0 \xa0  1-1~3-5 \n \xa0 \xa0 \xa0 \xa0 \xa0  3-6~3-14 \n \xa0 \xa0 \xa0 \xa0 \xa0  3-17~22 \n \xa0 \xa0 \xa0 \xa0 \xa0  4-1~4-3 \n', 'tags': '', 'url': '整組進度.html'}, {'title': 'W2', 'text': '', 'tags': '', 'url': 'W2.html'}, {'title': 'nxopen_getting_started_v12.pdf', 'text': 'nxopen_getting_started_v12.pdf \n', 'tags': '', 'url': 'nxopen_getting_started_v12.pdf.html'}, {'title': 'W3', 'text': '分組結果: \n 分組倉儲: \xa0 https://github.com/40823246/cad2020bg4 分組網站: \xa0 http://40823246.github.io/cad2020bg4 \n Repository: \xa0 40823207 \xa0 | Site: \xa0 40823207 Repository: \xa0 40823208 \xa0 | Site: \xa0 40823208 Repository: \xa0 40823216 \xa0 | Site: \xa0 40823216 Repository: \xa0 40823218 \xa0 | Site: \xa0 40823218 Repository: \xa0 40823220 \xa0 | Site: \xa0 40823220 Repository: \xa0 40823224 \xa0 | Site: \xa0 40823224 Repository: \xa0 40823228 \xa0 | Site: \xa0 40823228 Repository: \xa0 40823238 \xa0 | Site: \xa0 40823238 Repository: \xa0 40823244 \xa0 | Site: \xa0 40823244 Repository: \xa0 40823246 \xa0 | Site: \xa0 40823246 \xa0 (組長) \n', 'tags': '', 'url': 'W3.html'}, {'title': 'w4~w6', 'text': 'pdf1_29 \n \n', 'tags': '', 'url': 'w4~w6.html'}, {'title': 'w7~w9', 'text': '', 'tags': '', 'url': 'w7~w9.html'}, {'title': 'HW3', 'text': '1.將檔案存成ASCII STL \n 2.更改ASCII STL\xa0solid name與xml檔中的joint相對應 \n 3.調整顏色 \n \n \n xml檔程式碼 \n <robot_definition>\n<robot_dk name=kmol_kr_162>\n<axis id="Base" maxvalue="0" minvalue="0" alpha="0" a="0" theta="0" d="0"/>\n<axis id="Joint1" limsup="185.000" liminf="-185.000" alpha="0.000" a="0.000" theta="90.000" d="640"/>\n<axis id="Joint2" limsup="380.000" liminf="-380.000" alpha="90.000" a="-260" theta="0.000" d="0.00"/>\n<axis id="Joint3" limsup="144.000" liminf="-100.000" alpha="0.000" a="1300.000" theta="-90.000" d="0.000"/>\n<axis id="Joint4" limsup="350.000" liminf="-350.000" alpha="-90.000" a="-55.000" theta="0.000" d="1025.000"/>\n<axis id="Joint5" limsup="120.000" liminf="-120.000" alpha="90.000" a="0.000" theta="0.000" d="0.000"/>\n<axis id="Joint6" limsup="350.000" liminf="-350.000" alpha="-90.000" a="0.000" theta="180.000" d="290.000"/>\n</robot_dk>\n<robot_geometry>\n<geometry geo="kr16 - kuka kr16 assembly-1 base-2" name="Base" />\n<geometry geo="kr16 - kuka kr16 assembly-1 rotary head-2" name="Joint1"/>\n<geometry geo="kr16 - kuka kr16 assembly-1 lower arm-2" name="Joint2"/>\n<geometry geo="kr16 - kuka kr16 assembly-1 upper arm-2" name="Joint3"/>\n<geometry geo="kr16 - kuka kr16 assembly-1 p2-2" name="Joint4"/>\n<geometry geo="kr16 - kuka kr16 assembly-1 WRIST-2" name="Joint5"/>\n</robot_geometry>\n<CAD_base x="0.000" y="0.000" z="0.000" rx="0.000" ry="0.000" rz="0.000"/>\n<CAD_scale FACTOR="1.000000000"/>\n<CAD_offsets cad_theta1="0.000" cad_theta2="0.000" cad_theta3="0.000" cad_theta4="0.000" cad_theta5="0.000" cad_theta6="0.000"/>\n<Angle_Type id="1"/>\n</robot_definition> \n \n 檔案 \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'ANSI C', 'text': '修改啟動黨，加入tcc。 \n set path_portablegit=%Disk%:\\Portablegit\\bin;\nset path_julia=%Disk%:\\julia-1.5.2\\bin;\nset path_tcc=%Disk%:\\tcc\\;\n \npath=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path%; \n 執行下列程式碼。 \n /* Runge Kutta for a set of first order differential equations */\n  \n#include <stdio.h>\n#include <math.h>\n  \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n  \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n  \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n  \nvoid main(){\n  \n  double t, y[N];\n  int j;\n  \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n  \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n  \n  //fprintf(output, "0\\t%f\\n", y[0]);\n  \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n  \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n  \n  fclose(output);\n  fclose(output1);\n  \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n \n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n  \nvoid runge4(double x, double y[], double step){\n  \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n  \n  for (i=0;i<N;i++){\n  \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n  \n  for (i=0;i<N;i++){\n  \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n  \n  for (i=0;i<N;i++){\n  \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n  \n  for (i=0;i<N;i++){\n  \n    k4[i]= step*f(x+step, t3, i);\n  }\n  \n  for (i=0;i<N;i++){\n  \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n  \ndouble f(double x, double y[], int i){\n  \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n 阻尼=1 \n \n file \n', 'tags': '', 'url': 'ANSI C.html'}, {'title': 'NX API', 'text': '1.把路徑改成自想要的路徑 \n # nx_open_part.py\n# 導入 NXOpen\nimport NXOpen\nimport NXOpen.UF\nimport NXOpen.Gateway\n   \ndef main():\n    # 取得目前開啟的工作階段\n    theSession = NXOpen.Session.GetSession()\n    theUfSession = NXOpen.UF.UFSession.GetUFSession()\n      \n    # 建立 ListingWindow\n    listWin= theSession.ListingWindow\n    # 開啟零件檔案\n    basePart1 = theSession.Parts.OpenBaseDisplay("y:/tmp/block.prt")\n    workPart = theSession.Parts.Work\n    unit1 = workPart.UnitCollection.FindObject("MilliMeter")\n    # height\n    p7 = workPart.Expressions.FindObject("p7")\n    # width\n    p8 = workPart.Expressions.FindObject("p8")\n    # length\n    p9 = workPart.Expressions.FindObject("p9")\n    workPart.Expressions.EditWithUnits(p7, unit1, "30")\n    workPart.Expressions.EditWithUnits(p8, unit1, "60")\n    workPart.Expressions.EditWithUnits(p9, unit1, "90")\n    theSession.UpdateManager.DoUpdate(0)\n    #saveStatus1 = workPart.SaveAs("y:/tmp/block_new.prt")\n    #saveStatus1.Dispose()\n    # initialize list to hold bodies\n    theBodyTags = []\n   \n    for x in workPart.Bodies:\n        if x.IsSolidBody:\n            theBodyTags.append(x.Tag)\n      \n    # 準備輸出 ASCII 格式 STL 零件檔案\n    sTLCreator1 = theSession.DexManager.CreateStlCreator()\n    sTLCreator1.AutoNormalGen = True\n    sTLCreator1.ChordalTol = 0.08\n    sTLCreator1.AdjacencyTol = 0.08\n    sTLCreator1.OutputFile = "y:\\\\tmp\\\\block_ascii.stl"\n    # Binary STL: NXOpen.STLCreatorOutputTypeEnum.Binary\n    sTLCreator1.OutputType = NXOpen.STLCreatorOutputTypeEnum.Text\n    # 已知 body1 命名\n    body1 = workPart.Bodies.FindObject("EXTRUDE(2)")\n    added1 = sTLCreator1.ExportSelectionBlock.Add(body1)\n    nXObject1 = sTLCreator1.Commit()\n    sTLCreator1.Destroy()\n  \n    # 開啟所建立的 ListingWindow\n    listWin.Open()\n    listWin.WriteLine("number of solid bodies: " + str(len(theBodyTags)))\n   \n    (massProps, Stats) = theUfSession.Modeling.AskMassProps3d(theBodyTags, len(theBodyTags), 1, 4, .03, 1, [0.99,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])\n    listWin.WriteLine("units: kg, mm")\n    listWin.WriteLine("surface area: " + str(massProps[0]))\n    listWin.WriteLine("volume: " + str(massProps[1]*1E9))\n    # 在 ListingWindow 中寫入字串\n    listWin.WriteLine("Hello, NXOpen")\n    listWin.Close()\n     \n    # 將零件檔案 fit 之後, export 出 png 檔案\n    theUI = NXOpen.UI.GetUI()\n    imageExportBuilder1 = theUI.CreateImageExportBuilder()\n \n    custombackgroundcolor1 = [None] * 3\n    custombackgroundcolor1[0] = 1.0\n    custombackgroundcolor1[1] = 1.0\n    custombackgroundcolor1[2] = 1.0\n \n    imageExportBuilder1.SetCustomBackgroundColor(custombackgroundcolor1)\n    imageExportBuilder1.FileFormat = NXOpen.Gateway.ImageExportBuilder.FileFormats.Png\n    imageExportBuilder1.FileName = "y:\\\\tmp\\\\block.png"\n \n    imageExportBuilder1.BackgroundOption = NXOpen.Gateway.ImageExportBuilder.BackgroundOptions.Original\n \n    imageExportBuilder1.EnhanceEdges = False\n    imageExportBuilder1.RegionMode = False\n    # fit view 後 commit export png\n    workPart.ModelingViews.WorkView.Fit()\n    nXObject6 = imageExportBuilder1.Commit()\n \n    imageExportBuilder1.Destroy()\n      \nif __name__ == "__main__":\n    main() \n \n 2.開啟NX隨身版，找到journal後Play程式，得到以下檔案 \n \n 檔案 \n', 'tags': '', 'url': 'NX API.html'}, {'title': 'w10~14', 'text': 'BubbleRob tutorial.ttt \n 小組會議 \n 20201203 \n \n 20201204 \n \n 20201211 \n \n 20201215 \n \n 20210109 \n \n 20210114 \n \n \n \n', 'tags': '', 'url': 'w10~14.html'}, {'title': '筆記', 'text': '', 'tags': '', 'url': '筆記.html'}, {'title': '如何新增檔案連結', 'text': '\n 1.將檔案放入倉儲近端的downloads資料夾。 \n \n 2.到編輯網頁點edit link \n \n 3.點選檔案。 \n \n', 'tags': '', 'url': '如何新增檔案連結.html'}, {'title': 'BubbleRob tutorial', 'text': 'BubbleRob tutorial \n', 'tags': '', 'url': 'BubbleRob tutorial.html'}, {'title': '如何在RokiSim中更改顏色', 'text': '將stl檔拖入SciTE中編輯，在soild下一行加入color 0.0 0.0 0.0， \n 前面要加空格，數字的部分，分別代表藍綠紅， 用紅色來舉例， \n 就打color 0.0 0.0 1.0。 \n 成果: \n \n \n \n', 'tags': '', 'url': '如何在RokiSim中更改顏色.html'}]};